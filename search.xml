<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[inspect machine name of fields]]></title>
    <url>%2F2017%2F06%2F19%2Finspect-machine-name-of-fields%2F</url>
    <content type="text"><![CDATA[views中查看字段(Authored on)的机器名(created)。]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>Tricks</tag>
        <tag>Tips</tag>
        <tag>views</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Simple Menu Icons module]]></title>
    <url>%2F2017%2F06%2F16%2FSimple-Menu-Icons-module%2F</url>
    <content type="text"><![CDATA[用来实现icon menu。 模块介绍用来实现icon menu。 InstallationSimple Menu Icons Usage 创建menu(title=social),上传icon 把menu放到header block上 编辑simple_menu_icons.module文件，设定menu title为空 修改样式,正确显示icon12345678910111213141516a.menu-icon-13, ul.links li.menu-icon-13 a, ul.menu li.menu-icon-13 a &#123; display: block; width: 21px; height: 21px; padding-left: 0px; background-repeat: round; background-position: inherit;&#125;a.menu-icon-14, ul.links li.menu-icon-14 a, ul.menu li.menu-icon-14 a &#123; display: block; width: 21px; height: 21px; padding-left: 0px; background-repeat: round; background-position: inherit;&#125;]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>modules</tag>
        <tag>icon-menus</tag>
        <tag>image-menus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Video Embed Field module]]></title>
    <url>%2F2017%2F06%2F15%2FVideo-Embed-Field-module%2F</url>
    <content type="text"><![CDATA[Video Embed Field 用来创建字段，内嵌YouTube,Vimeo等视频 参考资源The Easiest Way to Embed Videos in Drupal 8 修改样式1234.video-embed-field-responsive-video &#123; margin: auto; width: 60%;&#125;]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>modules</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Pathauto module]]></title>
    <url>%2F2017%2F06%2F15%2FPathauto-module%2F</url>
    <content type="text"><![CDATA[Pathauto模块自动化URL别名 Install the modulesCreate the Pathauto patternsGenerate the URLs参考资源How to Use Pathauto in Drupal 8]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>modules</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Superfish module]]></title>
    <url>%2F2017%2F06%2F14%2FSuperfish-module%2F</url>
    <content type="text"><![CDATA[superfish用来快速构建drop-down-menus,drop-left-menus。 模块介绍略 Installation Download the Superfish library 2.x and extract it somewhere like /sites/all/libraries/superfish (so that the superfish.js will be located at http://example.com/sites/all/libraries/superfish/superfish.js) Download and extract the Superfish module in /modules. enable the Superfish module. Usage 创建Main navigation树形菜单 12345678Parent Menu 1 |_ Child Menu 1Parent Menu 2 |_ Child Menu 1 |_ Child Menu 2 |_ Sub Child Menu 1 |_ Sub Child Menu 2Parent Menu 3 通过Block Layout添加superfish块到header 怎样修改样式 In the block configuration page, set the Style to None Copy one of the Superfish sample styles, for example default.css from sites/all/libraries/superfish/style to your theme; Rename the selectors .sf-style-default to .sf-style-none or remove them altogether. 主题中引用default.css Some design tipsSet the Mouse delay of the block settings to 99999999 so the sub-menus will stay open for a longer time giving you more time to work with them in Firebug etc. 配置通过配置项可以修改小屏幕表示效果等。 参考资料superfish guide]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>modules</tag>
        <tag>drop-down-menus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Case Study 1: Chicken Soup for the Soul]]></title>
    <url>%2F2017%2F06%2F12%2FCase-Study-1-Chicken-Soup-for-the-Soul%2F</url>
    <content type="text"><![CDATA[模拟实现Chicken Soup for the Soul站点。 业务需求 需求 drupal实现 公司简介(Wo We Are) Basic page content type television article content type project Dad article content type hidden heroes article content type online videos article content type The sip article content type Distribution article content type video article content type News Aggregator module 不实现 Dads 自定义Dad content type Team 自定义team content type RECENT PRESS 自定义Recent Press content type Social Media(icon) Basic page content type Social Media(text) Basic page content type 多级主导航 Use blocks and menus 页脚-menu Use blocks and menus 页脚-external-menu Use blocks and Basic page 页脚-版权 Use blocks and Basic page 首页slideshow 自定义slideshow content type 首页what we do 自定义what we do content type 首页calltoaction Use blocks and Basic page 公司化的主题 Use a theme from Drupal.org 联系参照站点case studyhttps://cssentertainment.com/ key module videoThe biggest obstacles the project faced were the looming deadline, the relative instability of Drupal 8 immediately following the initial release, and the lack of contributed modules that were available to us. For example, the Media-related modules we would normally use for the online video section were not stable yet. Instead of using a media/file entity as we normally would to store an online video, we leveraged Drupal core’s new URL field to store the URL of the Rumble video, and used a field template to output an embed link. It was a simple and elegant solution to a difficult problem. 备选方案https://www.drupal.org/docs/8/modules/video FeaturesFeatures makes it easy to bundle configuration into modules, and makes it easier to share configuration (in the form of Drupal modules) between the brand’s sites should the need arise in the future. Swift Mailer Pathauto结合Token完成url自动化 Tokenhttps://www.drupal.org/documentation/modules/token Google Analytics Contributed moduleshttps://www.drupal.org/docs/8/modules psd to themehttps://www.youtube.com/watch?v=ITr9hHYPjBAhttps://www.slideshare.net/fourkitchens/from-photoshop-to-drupal-theme-drupalcon-san-francisco-2010/36-Create_a_sitemap_andwireframesHow_willhttps://www.slideshare.net/emmajane/psd-to-theme-acquia-webinar?qid=20f1b599-f214-49f6-8a67-a69c625464cf&amp;v=&amp;b=&amp;from_search=1 TODO 多级菜单 Drop Down menus nice_menus document superfish pathauto+token video google analytics 操作步骤 在acquia上新建站点,通过桌面版取代码到本地 进行drupal开发前设置 备份]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>Case Study</tag>
        <tag>Media</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scale and crop image]]></title>
    <url>%2F2017%2F06%2F06%2Fscale-and-crop-image%2F</url>
    <content type="text"><![CDATA[图片水平，垂直居中，切掉上下多余部分，高度随着宽度变化 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;DIV 高度随着宽度按照比例变化 &lt;/title&gt;&lt;/head&gt;&lt;style&gt;* &#123; box-sizing: border-box;&#125;html,body &#123; padding: 0; margin: 0;&#125;.out &#123; width: 30%; border: 1px solid transparent; position: relative;&#125;.ratio &#123; width: 100%; border: 1px solid transparent; margin-top: 52%;&#125;.img &#123; position: absolute; top: 0px; left: 0px; width: 100%; height: 100%; border: 1px solid transparent; overflow: hidden;&#125;.img img &#123; position: absolute; margin: auto; top: -200%; right: -200%; bottom: -200%; left: -200%; width: 100%;&#125;&lt;/style&gt;&lt;body&gt; &lt;!-- .out 是外层的div，宽度百分比设定，高度与宽度成一定比例变化， 它是靠内部的.ratio div支撑起来的 --&gt; &lt;!-- .ratio 是宽高成比例的div， 原理是利用margin在设定百分比的时候， 始终是根据父元素的width来设定的，所以height: 0px;margin-top: 52% --&gt; &lt;div class=&quot;out&quot;&gt; &lt;div class=&quot;ratio&quot;&gt; &lt;/div&gt; &lt;div class=&quot;img&quot;&gt; &lt;img src=&quot;h.png&quot; alt=&quot;&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;hr&gt; &lt;div class=&quot;out&quot;&gt; &lt;div class=&quot;ratio&quot;&gt; &lt;/div&gt; &lt;div class=&quot;img&quot;&gt; &lt;img src=&quot;v.png&quot; alt=&quot;&quot;&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <tags>
        <tag>css</tag>
        <tag>scale</tag>
        <tag>crop</tag>
        <tag>aspect-ratio</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hooks]]></title>
    <url>%2F2017%2F06%2F05%2FHooks%2F</url>
    <content type="text"><![CDATA[Hooks是module定义的特殊名称的funcion。通常用来修改core module的行为或数据。 php方式理解hook为了完成某项任务定义函数，随着时间的推移，业务的变化，你想要修改这个函数，可是有些人已经使用了这个函数，这个时候该怎么办？答案是：”永远不要修改既存代码”，hook就是用来解决这个问题的。 drupal的方式理解hook我们想对drupal core module的功能进行修改，又不修改core module的代码，这个时候就需要用到hook。当drupal core module中的hook被调用时，drupal会做以下3件事： 取得所有可用的module列表 询问每一个模块是否实现了对应的hook 如果模块回答“是”，drupal就会调用模块中的hook实现 Hooks vs. Event/ObserversEvent/Observers say Hey, just so you know, this happened Hooks say Hey, we’re doing this thing, do you want to be part of it? 怎样实现hook 去*.api.php中找hook函数定义和对应的示例 拷贝1中hook函数到你的module’s .module文件 修改hook函数名，替换hook为自定义module名 编辑注释为”Implements hook函数名” 修改hook函数内容 怎样定义hook 给hook函数起个唯一的名字 在module’s文件加下创建*.api.php文件，并记述怎样使用这个hook 在module’s 代码中调用hook Types of hooks Hooks that answer a question Hooks that alter existing data Hooks that react to an action 参考资料core hook listgood article discussing how Drupal module/hook system worksUnderstanding the hook system for Drupal modulesthe overview of module hooksWhat Are Hooks?]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>hooks</tag>
        <tag>function</tag>
        <tag>module</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[add css and js to theme]]></title>
    <url>%2F2017%2F06%2F02%2Fadd-css-and-js-to-theme%2F</url>
    <content type="text"><![CDATA[drupal8以asset library形式来管理css和js.asset library在themes/theme_name/theme_name.libraries.yml文件中定义.asset library是按照顺序加载的，所以请确保自定义的asset library放到theme_name.libraries.yml最后. 前提条件 创建文件themes/theme_name/css/styles.css 创建文件themes/theme_name/js/custom.js 在themes/theme_name/theme_name.libraries.yml中定义新的asset library123456custom: css: theme: css/styles.css: &#123;&#125; js: js/custom.js: &#123;&#125; 站点全页面添加css和js在themes/theme_name/theme_name.info.yml中引用前提条件中定义的asset library12libraries: - &apos;bootstrap/custom&apos; 个别画面添加css和js通常情况会根据route信息来加载相应的css和js。举例：想只在preview画面时引入自定义css和js,可以在themes/theme_name/theme_name.theme中添加以下hook123456function bootstrap_preprocess_page(&amp;$variables) &#123; $variables[&apos;page&apos;][&apos;#cache&apos;][&apos;contexts&apos;][] = &apos;route&apos;; if (\Drupal::routeMatch()-&gt;getRouteName() === &apos;entity.node.preview&apos;) &#123; $variables[&apos;#attached&apos;][&apos;library&apos;][] = &apos;bootstrap/custom&apos;; &#125;&#125; 添加可配置的js当js中需要用到php中的信息时，会用到可配置js功能。举例：想在页面渲染前，添加php信息到drupalSettings，可以在themes/theme_name/theme_name.theme中添加以下hook12345function bootstrap_page_attachments_alter(&amp;$data, &amp;$context1 = NULL, &amp;$context2 = NULL) &#123; $data[&apos;#attached&apos;][&apos;library&apos;][] = &apos;bootstrap/custom&apos;; $data[&apos;#attached&apos;][&apos;drupalSettings&apos;][&apos;foo&apos;] = &apos;bar&apos;; Bootstrap::alter(__FUNCTION__, $data, $context1, $context2);&#125; themes/theme_name/js/custom.js代码12345678910111213(function ($, Drupal, drupalSettings) &#123; &apos;use strict&apos;; Drupal.behaviors.mybehavior = &#123; attach: function (context, settings) &#123; console.log(drupalSettings.foo); &#125; &#125;;&#125;)(jQuery, Drupal, drupalSettings); 参考资源Adding stylesheets (CSS) and JavaScript (JS) to a Drupal 8 theme]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>css</tag>
        <tag>js</tag>
        <tag>asset library</tag>
        <tag>theme</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[manage database code files]]></title>
    <url>%2F2017%2F05%2F31%2Fmanage-database-code-files%2F</url>
    <content type="text"><![CDATA[drupal8中需要管理的内容主要包括database,code,files. 三种数据的管理 drupal8中很多内容都存储在database中，比如content types，站点名称，使用views模块创建的views等，所以数据库的定期备份很重要。 code使用git来管理。推荐使用phpstorm 的git界面工具，很drupal。(比如：提交界面中默认不会显示contri modules和themes，而只会显示你修改代码) 所有的files都存储在sites/default/files中。 开发时注意 database 每天备份 code 定期提交 files 无 安装新module前,一定要进行数据库备份,他可以挽救你的生命12drush archive-dumpdrush archive-restore 同步时注意devel-&gt;staging,或staging-&gt;product环境，表面理解是整体导出，导入数据库，测试staging或product环境取最新代码就可以了。为什么drupal8弄出个configuration manangement概念，让配置文件可以存储在文件中呢？上线运行一段时间后，再整体导入数据库是不可行的，这样就诞生了configuration manangement. 同步前,一定要进行数据库备份,他可以挽救你的生命 12drush archive-dumpdrush archive-restore 不要修改module’s config/install directory的文件 参考资源Managing your site’s configurationIntroduction to Drupal 8 Configuration Management]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>database</tag>
        <tag>code</tag>
        <tag>files</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[多语言]]></title>
    <url>%2F2017%2F05%2F27%2FMultiligual%2F</url>
    <content type="text"><![CDATA[drual8的多语言功能超赞！易用！ 安装多语言模块 各模块功能 language模块是其他3个模块的基础模块 interface translation模块用来翻译界面 Content translation模块用来翻译内容 Configuration translation模块用来翻译配置项安装完上边这4个模块，在Configuration &gt; Languages中添加第二语言后，interface翻译绝大多数都翻译好了。一般来说只需要自己翻译content和configuration。 语言转换block在 Block Layout中添加”Language switcher” block。 views只显示对应语言的内容在”FILTER CRITERIA”中添加“Content: Translation language (= Interface text language selected for page)” 参考资源Making Your Site Multilingual]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>多语言</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[drupal develop settings]]></title>
    <url>%2F2017%2F05%2F27%2Fdrupal-develop-settings%2F</url>
    <content type="text"><![CDATA[在进行drupal8开发前，请确保配置以下项目。这样可以节省很多时间！ 执行时间设置在sites/default/settings.php中添加以下内容，不限制执行时间.1ini_set(&apos;max_execution_time&apos;, 0); 如果不设定，enable module过程中出错，所有画面都不能访问，还不知道解决，很麻烦。 debug和log相关设置参看如何debug，去哪找log views设置参看views-module]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>settings</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[responsive]]></title>
    <url>%2F2017%2F05%2F26%2Fresponsive%2F</url>
    <content type="text"><![CDATA[在自适应主题(bootstrap,zen)的基础上进行开发，再对特殊的页面或区域进行调整 推荐的media query1234567891011121314151617181920212223/* Smartphones (portrait and landscape) ----------- */@media only screen and (min-device-width : 320px) and (max-device-width : 480px)&#123; /* Styles */ &#125;/* Smartphones (landscape) ----------- */@media only screen and (min-width : 321px) &#123; /* Styles */ &#125;/* Smartphones (portrait) ----------- */@media only screen and (max-width : 320px) &#123; /* Styles */ &#125;/* iPads (portrait and landscape) ----------- */@media only screen and (min-device-width : 768px) and (max-device-width : 1024px)&#123; /* Styles */ &#125;/* iPads (landscape) ----------- */@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and(orientation : landscape) &#123; /* Styles */ &#125;/* iPads (portrait) ----------- */@media only screen and (min-device-width : 768px) and (max-device-width : 1024px) and(orientation : portrait) &#123; /* Styles */ &#125;/* Desktops and laptops ----------- */@media only screen and (min-width : 1224px) &#123; /* Styles */ &#125;/* Large screens ----------- */@media only screen and (min-width : 1824px) &#123; /* Styles */ &#125;/* iPhone 4 ----------- */@media only screen and (-webkit-min-device-pixel-ratio : 1.5), only screen and(min-device-pixel-ratio : 1.5) &#123; /* Styles */ &#125;]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>responsive</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[atom]]></title>
    <url>%2F2017%2F05%2F24%2Fatom%2F</url>
    <content type="text"><![CDATA[atom相关索引页。 安装atom安装package 使用代理windows下代理启动atom1http_proxy=http://192.168.20.20:8080 https_proxy=http://192.168.20.20:8080 AppData/Local/atom/atom.exe 参考资源各操作系统设置代理方法]]></content>
      <tags>
        <tag>atom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[views module]]></title>
    <url>%2F2017%2F05%2F15%2Fviews-module%2F</url>
    <content type="text"><![CDATA[views模块主要用来查询网站中数据(从哪个表查询数据，用什么条件过滤，取得哪些字段),并配置以何种format(list,table)及何种dispaly(page,block)来显示这些数据。 模块介绍views首先是一个query builder.在views editor中可以配置query及format。 配置 Configure Views for debugging 访问admin/structure/views/settings，选中[Show the SQL query] 访问admin/structure/views/settings/advanced,选中[Add Views signature to all SQL queries] 上线运行时停用views UIviews模块包括views和views UI两个模块。上线运行时需要关闭views UI功能。 Usage choose what to query limit selection with filters view modes or fields select and Configure formatting choose dispalys - and/or add attachments workflow image 学习资源 A Totally Beginner Tutorial to Views for Drupal 7 Views Mini-Course, Part I: An Introduction to Viewsvideo&slide Views Mini-Course, Part II: Creating Flexible Views with Drupal 7video Views Mini-Course, Part III: How to Back Up Your Views Safelyvideo&slide Tips and Tricks for Getting the Most Out of Viewsslide 学习资源1-5备忘 Demo: Your Front Page [Views Mini-Course, Part I: An Introduction to Views] Demo: customize the view add a dispaly [Views Mini-Course, Part I: An Introduction to Views] Demo: Exposed filters [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] Demo: attachments [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] Demo: relationship [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] Demo: contextual filters [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] calendar [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] slideshow [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] admin views [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] views bulk operation [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] workbench [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] Demo: VOB [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] Don’t forget [Views Mini-Course, Part III: How to Back Up Your Views Safely] Views qulity checklist [Views Mini-Course, Part III: How to Back Up Your Views Safely] anatomy of a view [Views Mini-Course, Part III: How to Back Up Your Views Safely] views basic template [Views Mini-Course, Part III: How to Back Up Your Views Safely] slideshow apache_solr calendar maps 实际网站 [Tips and Tricks for Getting the Most Out of Views] 练习filters Demo: Exposed filters [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] Use Views to Show Content Created by Drupal Usersexpose filters Demo: relationship [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] Demo: contextual filters [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7 Manually Select Content for Drupal Views 完成功能使用contextual filters来指定查询条件 Using Entity Reference Fields in Drupal Views 完成功能 Drupal Views Inside Other Views 完成功能 使用模块Views Field View : 连接2个view，传递参数给子view Randomly Show Drupal Content or Users in Views 完成功能使用sort filters来随机显示内容 How to Create a Popular Articles View in Drupal 完成功能按点击顺序排序文章 Show Drupal Content Only With Terms of Specific Depth 完成功能显示Taxonomy子类别的内容 format Show Drupal 8 Content in Tabs, Using Views 完成功能 How to Build Drupal 8 Slideshows 完成功能 Creating a Drupal Slideshow with Views Slideshow 完成功能 使用模块Chaos tool suite (ctools) 用来提高开发体验的api和工具。另外还包括一个叫page manager的模块，这里用到的应该是page manager。views_slideshow 轮播模块 Display Suite and Views Together in Drupal 完成功能 使用模块Display Suite 用来创建复杂页面，控制输出和layout Add CSS Style to Drupal Views 完成功能 Add Links to Fields in Views 完成功能 Use Views to Control Drupal’s Taxonomy Pages 完成功能修改drupal提供的views(点击tags terms后显示的页面) How to Create a Calendar in Drupal 8 完成功能 使用模块Views Templates 提供一些复杂页面的模板calendar 日历模块 dispaly Demo: attachments [Views Mini-Course, Part II: Creating Flexible Views with Drupal 7] Other Demo: Your Front Page [Views Mini-Course, Part I: An Introduction to Views] Demo: customize the view add a dispaly [Views Mini-Course, Part I: An Introduction to Views] How to Create a Glossary View in Drupal 完成功能 Count the Total Number of Results in Drupal Views 使用模块Token 提供核心不支持的token What Does Delta Mean in Drupal? 完成功能“Delta” only appears fields which have multiple value. “Delta” refers to the order of the values 其他资源Learn Views in Drupal 8Views &amp; SQL Analogy - An easier way to explain Viewsdrupal 官网Views guide]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>modules</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[devel module]]></title>
    <url>%2F2017%2F05%2F12%2Fdevel-module%2F</url>
    <content type="text"><![CDATA[devel module包括Web Profiler,Devel,Devel generate,Devel Kint4个子模块。安装devel module后，主要能帮助我们做以下4类事情 devel模块介绍 WebProfilerWebProfiler gives you a better sense of how your website works, and how to debug it if it is underperforming. Database选项卡-访问该页面产生的SQL Events选项卡-哪些controller被调用，及调用顺序 Routing选项卡-列出所有的routing path 其他选项卡介绍，请看这里 drush结合devel generate content, review hook implementations等 Devel Generate 生成假数据 dpm()函数或kint($array)函数等 gives you the contents of any variable. Themers use this to know what they can print out in any given template. 参考资源Devel模块介绍enable WebProfiler出错WebProfilers配置]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>modules</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何debug，去哪找log]]></title>
    <url>%2F2017%2F05%2F11%2Flog-and-debug%2F</url>
    <content type="text"><![CDATA[log和debug相关设置 show all errors by adding a few lines to your local testing site’s settings.php: 123error_reporting(E_ALL);ini_set(&apos;display_errors&apos;, TRUE);ini_set(&apos;display_startup_errors&apos;, TRUE); navigate to Configuration &gt; DEVELOPMENT &gt; Logging and errors (admin/config/development/logging) and select “All messages”. 激活Debug mode激活后，drupal会禁用cache,js和css聚合,修改error_log为详细级别等 拷贝文件到sites/default/ 1cp sites/example.settings.local.php sites/default/settings.local.php 放开sites/default/settings.php中以下内容 123if (file_exists($app_root . &apos;/&apos; . $site_path . &apos;/settings.local.php&apos;)) &#123; include $app_root . &apos;/&apos; . $site_path . &apos;/settings.local.php&apos;;&#125; 开启Twig templates debugsites/default/services.yml 123twig.config: debug: true auto_reload: true Switch on strict PHP error reportingcheck through your php.ini file and set error reporting to E_ALL | E_STRICT. log 网站不能访问 查看apache log 1tail -f &apos;C:\Program Files (x86)\DevDesktop\apache\logs\error.log&apos; drush watch dog 1drush wd-show --tail 通过syslog module 查看logsyslog需要关闭dblog，不适用于开发时使用 网站可以访问 通过dblog module查看系统事件logYour site captures system events in a log to be reviewed by an authorized individual at a later time. The log is a list of recorded events containing usage data, performance data, errors, warnings, and operational information. It is vital to check the log on a regular basis as it is often the only way to tell what is going on.You can find your site’s recent log messages in the Manage administrative menu by navigating to Reports &gt; Recent log messages (admin/reports/dblog). debug tools phpstorm + xdebug chrome xdebug helper插件 devel module 参考资源Show all errors while developingDatabase Logging module overviewSyslog module overviewDebugging Twig templatesdrupal-8-debugging-techniques]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>log</tag>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[构建drupal8开发环境及发布到web]]></title>
    <url>%2F2017%2F05%2F11%2Facquia-free-hosting%2F</url>
    <content type="text"><![CDATA[本文主要记录drupal8本地环境构建以及发布本地代码到acquia的过程。 drupal8本地环境构建 Local server with Acquia Dev Desktop Getting started with Acquia Dev Desktop Working with your sites Using PhpStorm with Acquia Dev Desktop Configuring PHPStorm(本地xdebug) phpstorm正版注册 提交本地代码到acquia在acquia注册并完成drupal环境安装后，代码被提交到acquia git库，所以本地需要配置ssh访问acquia git库。具体步骤如下： acquia云用户免费注册 drupal环境安装 Generating an SSH public key 在Acquia user profile中添加SSH public key 在Acquia Application Information中找到acquia git库 测试访问acquia git库1ssh lyssite@svn-5767.devcloud.hosting.acquia.com:lyssite.git]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>acquia</tag>
        <tag>hosting</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[todolist]]></title>
    <url>%2F2017%2F05%2F11%2Ftodolist%2F</url>
    <content type="text"><![CDATA[了解Acquia Lightning 使用drush安装devel模块不好使 1drush dl devel --select Drupal First Time User Guide - Drupal Learning Curve in One Page drupal-8-debugging-techniques Welcome to Cog: A New Drupal 8 Base Theme acquia-drupal-planet Drupal How-To: Find great beginner tutorials on Drupal 7https://www.acquia.com/comment/256931 Drupal 8 Tutorials for Beginnershttps://dev.acquia.com/blog/drupal-8-tutorials-for-beginners/19/07/2016/10491 The Beginners Guide to Drupal 8https://www.ostraining.com/class/d8-beginner/ LevelTen drupalesay webwash webomelette views练习 https://www.acquia.com/resources/webinars/easily-create-maps-drupal-leaflet 通读Heather James所有文章 https://dev.acquia.com/users/heather-james Download Drupalize.Me Video(只能下载免费的) http://www.allavsoft.com/how-to/download-drupalize-drupal-training-videos.html http://www.bigasoft.com/articles/download-drupalize-me-training-video.html drupal8 不能实现 Entity Reference Views Help Drupal Content Creators Entity Views Attach: Use Views Almost Anywhere使用hook修改sql应该可以实现这个功能https://api.drupal.org/api/drupal/core%21modules%21views%21views.api.php/function/hook_views_query_alter/8.2.x在node.views_execution.inc中添加hook可以修改sql语句 1234567891011121314151617181920212223242526272829303132333435// 这个可以添加groupBy// 但是好像只要join表了，就默认添加表的id到groupby//错误消息&quot;SQLSTATE[42000]: Syntax error or access violation: 1055 &apos;lyssite_dev.field_tag_taxonomy_term_field_data.nid&apos; isn&apos;t in GROUP BY: SELECT DISTINCT&quot;function node_views_pre_execute(ViewExecutable $view) &#123; if ($view-&gt;id() == &apos;eva_test2&apos;) &#123; $view-&gt;build_info[&apos;query&apos;]-&gt;groupBy(&apos;taxonomy_term_field_data.tid&apos;); $view-&gt;build_info[&apos;query&apos;]-&gt;groupBy(&apos;taxonomy_term_field_data.name&apos;); &#125;&#125;// 这个不能添加groupbyfunction node_views_query_alter($view, $query) &#123; //if ($view-&gt;id() == &apos;eva_test2&apos; &amp;&amp; $view-&gt;getDisplay()-&gt;display[&apos;id&apos;] == &apos;entity_view_1&apos;) &#123; if ($view-&gt;id() == &apos;eva_test2&apos;) &#123; //$query-&gt;add_groupby = array(array(&apos;field&apos;=&gt; &apos;tid&apos;)); /* $query-&gt;fields = array( &apos;taxonomy_term_field_data_name&apos; =&gt; array(&apos;field&apos;=&gt; &apos;name&apos;, &apos;table&apos;=&gt; &apos;taxonomy_term_field_data&apos;, &apos;alias&apos;=&gt; &apos;taxonomy_term_field_data_name&apos;), &apos;tid&apos; =&gt; array(&apos;field&apos;=&gt; &apos;tid&apos;, &apos;table&apos;=&gt; &apos;taxonomy_term_field_data&apos;, &apos;alias&apos;=&gt; &apos;tid&apos;) ); */ &#125;&#125; Show Only Specific Levels of Taxonomy in Views How to Create a Popular Articles View in Drupal自定义views时，block不能实时更新点击数量无法显示drupal8自带的Popular Content模块 How to Rewrite the Output of Views with PHP使用php代码输出内容views_php模块有bug，无法使用 Use Views to Display Fields inside Panelsd8在使用上和例子不同 Views Bulk Operations Makes Mass Updates Easy in DrupalVBO模块正在移植到drupal8的进程中 学习db查询和views相关hook]]></content>
  </entry>
  <entry>
    <title><![CDATA[drupal8术语表]]></title>
    <url>%2F2017%2F05%2F10%2Fterminology%2F</url>
    <content type="text"><![CDATA[术语 解释 Article One of two content types that are enabled in the standard installation profile. Articles are used for time-sensitive content like news, press releases or blog posts. Basic Page One of two content types that are enabled in the standard installation profile. Typically basic pages are used for static content that can (but are not required to) be linked into the main navigation bar. Block A chunk of content (text, images, links, etc.) that can be displayed on a page of a site. Blocks are displayed in regions. Region A defined area of a page where content can be placed, such as the header, footer, main content area, left sidebar, etc. Regions are defined by themes, and the content displayed in each region is contained in blocks. Content Information meant to be displayed on your site, such as text, images, downloads, etc. Content item An item of content that is typically meant to be displayed as the main content of a page on your site. Content type An entity subtype for the content item entity type. Each content type is used for some particular purpose on the site, and each has its own fields. For example, a site for a farmers market might have a content type for simple pages, and another for a vendor listing page. Entity An item of either content or configuration data, although in common usage, the term often refers to content entities. Examples include content items, custom blocks, taxonomy terms, and definitions of content types; the first three are content entities, and the last is a configuration entity. Field Data of a certain type that is attached to a content entity. For instance, on a farmers market site’s vendor content type, you might have fields for an image, the vendor description, and a taxonomy term. Menu A set of links used for navigation on a site, which may be arranged in a hierarchy. Node A piece of content in Drupal, typically corresponding to a single page on the site, that has a title, an optional body, and perhaps additional fields. Every node also belongs to a particular content type, and can additionally be classified using the taxonomy system. Examples of nodes are polls, stories, book pages and images. Published The state of a node that can be viewed by visitors to the website. To easily hide nodes from the public (i.e. anonymous role), make the node unpublished by unchecking “Published” in the node add/edit form. Reference field A field that represents a relationship between an entity and one or more other entities, which may be the same entity type or a different type. For example, on a farmers market site, a recipe content item might have a reference field to the vendor (also a content item) that posted the recipe. Taxonomy term fields are also reference fields. Taxonomy The process of classifying content Taxonomy term A term used to classify content, such as a tag or a category Teaser A short introductory sentence or paragraph about a piece of content that informs readers about the subject of the content. By default, the first paragraph or two of the content is used (there is a setting for how much), usually with a link to the complete node. Views A core module which allows site developers a simple graphical interface for creating lists of various drupal objects; most notably users and nodes. Views permits selection of specific fields to display, filtration against various node attributes, choice of basic layout options (i.e. list, full nodes, teasers, etc.), and other more advanced features. Many Drupal sites use Views extensively. Weight A term used by Drupal to define the priority or order in which a function is processed or a block / node is displayed. From Drupal 6, the weight field is adjusted dynamically using a drag-and-drop interface. Note: A lower weight value (-10) will float to the top of lists, while heavier (+10) weights will appear lower in lists. WYSIWYG Acronym for What You See is What You Get, meaning a method for editing content where what you see on the editing screen closely resembles the final product.]]></content>
      <tags>
        <tag>drupal8</tag>
        <tag>terminology</tag>
        <tag>glossary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[创建公司类型网站]]></title>
    <url>%2F2017%2F05%2F10%2Fexecise-with-beginning-drupal8%2F</url>
    <content type="text"><![CDATA[5个月前，完全不了解drupal时，跟随者《beginning drupal8.pdf》，经过两遍折腾，实现了书中的例子。2个月前，开始通读drupal.org上的大部分文档及Acquia上的部分文档后，于近期完成。最近这两天感觉遇到了瓶颈，没有了前进的方向。直到昨天读到了 Drupal First Time User Guide - Drupal Learning Curve in One Page 才又找到了前进的方向。对于现阶段的我来说，文章中的【7. Learn Drupal: Steps to build your site】比较适用。 业务需求 需求 drupal实现 公司简介 Basic page content type 客户项目 自定义content type 公司提供的服务，及客户项目链接到服务 Article content type， ArticleType taxonomy vacabulary = service offering(taxonomy term) 核心员工 扩展user profile来增加简介,添加一个view来表示员工profile 能够撰写和发布新闻 Article content type， ArticleType taxonomy vacabulary = news(taxonomy term),添加一个view来表示新闻 feed新闻 Aggregator module 选择员工到博客 Article content type， ArticleType taxonomy vacabulary = blog post(taxonomy term),添加一个view来表示博客 联系表单 Contact module 主导航 Use blocks and menus 页脚（核心页面列表，公司地址，联系方式） Use blocks and menus 公司化的主题 Use a theme from Drupal.org 其他要求 acquia free hosting git管理代码 configuration manangement system 多语言 移动设备优先,自适应 相关terminology整理 尽可能的使用drush完成administrative tasks 构建开发环境 如何debug，去哪找log 使用的modules Devel views]]></content>
      <tags>
        <tag>drupal8</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[创建hexo博客]]></title>
    <url>%2F2017%2F05%2F02%2Fbuild-hexo-blog%2F</url>
    <content type="text"><![CDATA[本文记录了在windows7下构建hexo环境的步骤。主要包括安装hexo,创建页面，添加tag页面,更换主题，修改主题，添加评论。目的在于快速构建一个实用，漂亮的blog。 安装hexo前提条件 安装Node.js 安装Git 创建代码库(https://github.com/username/username.github.io.git) 删除C:\Users\username.ssh 下所有文件 Generating a new SSH key and adding it to the ssh-agent Adding a new SSH key to your GitHub account 本文所有命令都在Git Bash中执行 安装Hexo1$ npm install -g hexo-cli 初始化Hexo1234$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install hexo-deployer-git --save$ hexo generate 本地查看效果1$ hexo server 启动服务，访问http://localhost:4000 查看效果 发布到github 修改/_config.yml文件内容 1234deploy: type: git repo: https://github.com/username/username.github.io.git branch: master 发布到github 1$ hexo deploy 访问https://username.github.io 查看效果 发布新页面到github 创建页面并发布 123$ hexo new [layout] &lt;title&gt; --创建.md文件$ hexo generate --生成静态页面$ hexo deploy 编写内容Markdown语法Tag Plugins语法 更换主题 主题列表 更换成Light主题 添加标签页面 创建标签一览页面 1hexo new page &quot;tags&quot; 添加以下内容到source/tags/index.md 1type: &quot;tags&quot; 添加搜索功能local search TODO 修改theme 添加评论]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>